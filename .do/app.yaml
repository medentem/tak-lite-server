# DigitalOcean App Platform Configuration
# Uses Dockerfile build strategy with managed database
# Cost: $27/month ($12 app + $15 database)

name: tak-lite-server
region: nyc  # Or your preferred region (e.g., fra for Europe)

services:
  - name: api
    dockerfile_path: Dockerfile
    source_dir: /
    github:
      branch: main
      deploy_on_push: true
      repo: medentem/tak-lite-server  # Update to your actual repo
    http_port: 3000
    instance_count: 1
    instance_size_slug: basic-xs  # Start small; scale to basic-s if needed
    envs:
      - key: NODE_ENV
        scope: RUN_TIME
        value: production
      - key: DATABASE_URL
        scope: RUN_AND_BUILD_TIME
        value: ${tak-lite-server-db.DATABASE_URL}
      - key: DATABASE_CA_CERT
        scope: RUN_AND_BUILD_TIME
        value: ${tak-lite-server-db.CA_CERT}  # Corrected to DigitalOcean's injected variable
      - key: PGSSLMODE
        scope: RUN_AND_BUILD_TIME
        value: require
      - key: JWT_SECRET
        scope: RUN_TIME
        type: SECRET
      - key: JWT_EXPIRES_IN
        scope: RUN_TIME
        value: 7d
      - key: CORS_ORIGIN
        scope: RUN_TIME
        value: "*"  # Update to your domain for production
      - key: LOG_LEVEL
        scope: RUN_TIME
        value: info
    health_check:
      http_path: /health
      initial_delay_seconds: 30  # Give time for migrations
    routes:
      - path: /

jobs:
  - name: migrate
    kind: PRE_DEPLOY  # Runs before service deploy
    dockerfile_path: Dockerfile
    source_dir: /
    github:
      branch: main
      deploy_on_push: true
      repo: medentem/tak-lite-server
    envs:  # Same as service, plus any migration-specific
      - key: DATABASE_URL
        value: ${tak-lite-server-db.DATABASE_URL}
      - key: DATABASE_CA_CERT
        value: ${tak-lite-server-db.CA_CERT}
    run_command: sh -c "cd dist && npm run db:migrate"  # Run migrations from dist directory where compiled files are

databases:
  - cluster_name: tak-lite-server-db
    engine: PG
    name: tak-lite-server-db
    num_nodes: 1
    size: db-s-dev-database  # Dev size; upgrade to db-s-1vcpu-1gb for prod
    version: "15"
    production: false  # Set to true for prod with backups

alerts:
  - rule: DEPLOYMENT_FAILED
    value: 1
    window: 5m
  - rule: CPU_UTILIZATION
    value: 80
    window: 5m

ingress:
  rules:
    - component:
        name: api
      match:
        path:
          prefix: /
